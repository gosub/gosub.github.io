#+hugo_base_dir: site/
* site config
** main
#+name: main
#+begin_src toml :tangle site/hugo.toml :noweb yes
  baseURL = 'https://giampaolo.guiducci.it/'
  languageCode = 'en-us'
  title = 'Giampaolo Guiducci'
  theme = 'cactus'
  publishDir = '../docs'

  [params]
    description = "An empty set, by construction."
    mainSection = "posts"
    mainSections = ["posts"]
    mainSectionTitle = "posts"
    <<socials>>

  <<menu>>

  [markup.goldmark.renderer]
    unsafe = true
#+end_src
*** socials
#+name: socials
#+begin_src toml
[[params.social]]
  name = "email"
  link = "giampaolo.guiducci@gmail.com"

[[params.social]]
  name = "github"
  link = "https://github.com/gosub"

[[params.social]]
  name = "instagram"
  link = "https://instagram.com/sottoforma"
#+end_src
*** menu
#+name:menu
#+begin_src toml
[[menu.main]]
name = "home"
url = "/"
weight = 1

[[menu.main]]
name = "posts"
url = "/posts"
weight = 2

[[menu.main]]
name = "notes"
url = "/notes"
weight = 3

[[menu.main]]
name = "μlog"
url = "/μlog"
weight = 4

[[menu.main]]
name = "tags"
url = "/tags"
weight = 5
#+end_src
** cname
#+name: cname
#+begin_src cname :tangle site/static/CNAME
giampaolo.guiducci.it
#+end_src
* posts
** Random patch generator for Behringer Edge :behringer_edge:
:PROPERTIES:
:EXPORT_FILE_NAME: 2024-12-28-edge-random-patch
:EXPORT_DATE: 2024-12-28T16:33:35+01:00
:END:

Inspired by the video from mylarmelodies where he discuss with Tom Whitwell
about The Music Thing Workshop System.  In that video Tom says that he created a
random patch generator for the Workshop System, and I wanted to make one too for
the synth I have, the Behringer Edge.

#+begin_export html
    <style>
        .pair {
            display: flex;
            align-items: center;
            margin: 15px 0;
        }

        .input, .output {
            height: 30px;
            border-radius: 25px;
            padding: 0 20;
            font-weight: bold;
            line-height: 30px;
            text-align: center;
	    width: 170px;  /* Fixed width for input and output */
        }

        .input {
            border: 2px solid black;
            
        }

        .output {
            background-color: black;
            color: white;
            margin-left: 10px;  /* Space between input and output */
        }

        button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
    </style>

    <button onclick="generatePairs()">Generate random patch</button>
    
    <div id="output"></div>

    <script>
        const ins = ["OSC1", "OSC2", "OSC EG", "TRIGGER",
                     "VELOCITY", "PITCH", "VCF EG", "VCA",
                     "VCA EG"];
        const outs = ["OSC1 CV", "OSC2 CV", "OSC DECAY",
                      "ADV/CLOCK", "TRIGGER", "VELOCITY",
                      "NOISE LEVEL", "1-2 FMT AMT", "EXT AUDIO",
                      "TEMPO", "PLAY/STOP", "VCF MOD",
                      "VCF DECAY", "VCA CV", "VCA DECAY"];

        function generatePairs() {
            const n = Math.floor(Math.random() * ins.length) + 1;  // Random number of pairs (between 1 and length of `ins`)
            const randomIns = shuffle([...ins]).slice(0, n);
            const randomOuts = shuffle([...outs]).slice(0, n);

            const outputDiv = document.getElementById('output');
            outputDiv.innerHTML = '';  // Clear previous output

            for (let i = 0; i < n; i++) {
                const pairDiv = document.createElement('div');
                pairDiv.className = 'pair';

                // Create a div for the input with the black curved outline
                const inputDiv = document.createElement('div');
                inputDiv.className = 'input';
                inputDiv.textContent = randomIns[i];

                // Create a div for the output with black background and white text
                const outputDivElement = document.createElement('div');
                outputDivElement.className = 'output';
                outputDivElement.textContent = randomOuts[i];

                // Append both input and output to the pair div
                pairDiv.appendChild(inputDiv);
                pairDiv.appendChild(outputDivElement);

                // Append the pair div to the output div
                outputDiv.appendChild(pairDiv);
            }
        }

        // Shuffle function (Fisher-Yates algorithm)
        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }
    </script>
#+end_export
* notes
:PROPERTIES:
:EXPORT_HUGO_SECTION: notes
:END:
** first note :life:
:PROPERTIES:
:EXPORT_FILE_NAME: 2024-12-27-first-note
:EXPORT_DATE: 2024-12-27T18:27:29+01:00
:END:
First note. This will disappear. soon.
* pages
** microlog
:PROPERTIES:
:EXPORT_HUGO_SECTION: /
:EXPORT_FILE_NAME: μlog
:END:
*** I have no audience, and I must scream. [2013-01-03]
*** This entry intentionally left blank [2013-01-03]
* refs
- [[https://gohugo.io/documentation/][hugo]]
- [[https://ox-hugo.scripter.co/][ox-hugo]]
- [[https://github.com/monkeyWzr/hugo-theme-cactus][cactus theme]]
